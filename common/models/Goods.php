<?php

namespace common\models;

use Yii;
use yii\web\UploadedFile;

/**
 * This is the model class for table "goods".
 *
 * @property int $id
 * @property int|null $name
 * @property string|null $url
 * @property int|null $author_id
 */
class Goods extends \yii\db\ActiveRecord
{
    public $file;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'goods';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['author_id'], 'integer'],
            [['file'], 'file'],
            [['url','name'], 'string', 'max' => 255],
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        $file = UploadedFile::getInstance($this, 'file');
        $url = null;
        if ($file && $file->tempName) {
            $this->file = $file;
            if ($this->validate(['file'])) {

                $rand = rand(900000,9000000);
                $dir = Yii::getAlias('@frontend/web/goods/');
                $dir2 = Yii::getAlias('goods/');
                $fileName = $rand . '.' . $this->file->extension;
                $this->file->saveAs($dir . $fileName);
                $this->file = $fileName; // без этого ошибка
                $url = '/'.$dir2 . $fileName;
            }
        }
        $this->url= $url;

        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAuthor(){
        return $this->hasOne(User::className(), ['id' => 'author_id']);
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Наименование',
            'url' => 'Url',
            'author_id' => 'Author ID',
        ];
    }
}
